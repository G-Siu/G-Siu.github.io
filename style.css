:root {
    --primary: #0595cd;
    --dk-grey: #333;
    --max-width: 960px;
    --spacing: 4rem;
    --img-width: 350px;
}

html {
    scroll-behavior: smooth;
}

body {
    font-family: Arial, Helvetica, sans-serif;
}

.neutral-theme {
    background-color: white;
    --button-color: var(--primary);
    --button-hover-color: white;
}

.primary-theme {
    color: white;
    background-color: var(--primary);
    --button-color: white;
    --button-hover-color: var(--primary);
}

header {
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 2rem;
}

h1 {
    margin-bottom: 2rem;
    font-size: clamp(2rem, 5vw, 20rem);
    font-weight: bold;
    line-height: 1.4em;
}

h2 {
    margin-bottom: var(--spacing);
    text-align: center;
    font-size: clamp(2rem, 3vw, 20rem);
    font-weight: bold;
    text-transform: uppercase;
}

h3 {
    margin-bottom: 1rem;
    font-size: 2rem;
    font-weight: bold;
}

.heading-highlight {
    color: var(--primary);
}

.button {
    display: block;
    width: max-content;
    padding: 1rem;
    border: 1px solid var(--button-color);
    font-weight: bold;
    text-decoration: none;
    color: var(--button-color);
}

.button:hover {
    color: var(--button-hover-color);
    background-color: var(--button-color)
}

.header-link {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
}

/* element state, the after changes it after */
.header-link::after {
    content: ""; /* must have content with empty string for element to render */
    width: 0;
    height: 0;
    border-style: solid;
    border-width: .5rem .5rem 0 .5rem;
    border-color: var(--button-color) transparent transparent transparent;
}

.header-link:hover::after {
    border-color: var(--button-hover-color) transparent transparent transparent
}

.about {
    padding: var(--spacing);
    position: relative;
    margin-bottom: 100px;
}

.about::after {
    content: "";
    position: absolute;
    right: 0;
    bottom: -100px;
    width: 0;
    height: 0;
    border-top: 100px solid var(--primary);
    border-right: 100vw solid transparent;
}

.about-img {
    max-width: var(--img-width);
    filter: grayscale(100%);
}

.about-img:hover {
    filter: grayscale(0);
}

p {
    margin-bottom: 1em;
    font-size: 1rem;
    line-height: 1.4rem;
}

.about-info {
    max-width: var(--max-width);
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing);
}

blockquote {
    margin-top: var(--spacing);
    font-size: 2rem;
    font-style: italic;
    text-align: center;
}

cite {
    display: block;
    margin-top: 1rem;
    font-size: 1rem;
    font-style: normal;
}

article {
    display: flex;
    flex-direction: column-reverse;
}

.article-img {
    margin-bottom: 2rem;
    max-width: 600px;
}

.contact {
    position: relative;
    margin-top: 100px;
    text-align: center;
}

.contact::before {
    content: "";
    position: absolute;
    right: 0;
    top: -100px;
    width: 0;
    height: 0;
    border-bottom: 100px solid var(--primary);
    border-left: 100vw solid transparent;
}

footer {
    padding: var(--spacing);
    background-color: var(--dk-grey);
    color: white;
    & p {
        text-align: center;
    }
}

.social {
    display: flex;  /* single rows, columns use flex. Multiple use grid */
    gap: 2rem;
    justify-content: center;
    margin-bottom: var(--spacing); /* so it doesn't touch copyright */
}

.social-link {
    display: block;
    width: 60px;
    height: 60px;
    color: transparent;
    font-size: 1px;
    background-repeat: no-repeat;
    background-size: 60px;
    filter: invert(100);
    transition: all 0.2s ease-in-out;
}

.social-link:hover {
    transform: scale(1.2);
}

.li {
    background-image: url(social-icons/icons/li.png);
}

.yt {
    background-image: url(social-icons/icons/yt.png);
}

.gh {
    background-image: url(social-icons/icons/gh.png);    
}

@media (min-width: 800px) {
    .about-info {
        flex-direction: row;
        align-items: flex-start;
    }

    article {
        flex-direction: row;
        max-width: var(--max-width);
        gap: 2rem;
        margin: 0 auto var(--spacing);
    }

    .article-img {
        max-width: var(--img-width);
        object-fit: cover;
    }
}